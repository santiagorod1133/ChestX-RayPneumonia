import os
import cv2
import numpy as np
import pandas as pd

# Define the directories containing the JPG images for each dataset
dataset_dirs = [
    '/Users/location1',
    '/Users/location2'
]

# Define the desired dimensions for resizing
width, height = 256, 256  # Replace with your desired dimensions

# Initialize lists to store the image data and corresponding labels
image_data = []
labels = []

# Process each dataset separately
for class_label, dataset_dir in enumerate(dataset_dirs):
    # List all JPG files in the dataset directory
    image_files = [f for f in os.listdir(dataset_dir) if f.endswith('.jpeg')]
    
    # Loop through the image files
    for image_file in image_files:
        # Construct the full path to the image
        image_path = os.path.join(dataset_dir, image_file)
        
        # Load the image using OpenCV
        image = cv2.imread(image_path)
        
        if image is not None:
            # Convert the image to grayscale
            grayscale_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
            
            # Resize the grayscale image to the desired dimensions
            resized_image = cv2.resize(grayscale_image, (width, height))
            
            # Flatten the image data (convert 2D array to 1D array)
            flattened_data = resized_image.ravel()
            
            # Append the flattened data to the list
            image_data.append(flattened_data)
            
            # Append the corresponding label to the labels list
            labels.append(class_label)

# Convert the lists to NumPy arrays
image_data_array = np.array(image_data)
labels_array = np.array(labels)

# Create a DataFrame from the NumPy arrays
df = pd.DataFrame(image_data_array)

# Add a "label" column to the DataFrame
df['label'] = labels_array

# Define the CSV file path where you want to save the data
csv_file_path = '/Users/location/combineddata.csv'  # Replace with your desired output file path

# Save the DataFrame to a CSV file
df.to_csv(csv_file_path, index=False)

print(f"Processed and saved data from {len(image_data)} images to {csv_file_path}")
